# Generated by Django 2.0.8 on 2018-08-02 01:05

from django.conf import settings
from django.db import migrations, models
import django.utils.timezone
import go_back.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RegisteredUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='', max_length=100, verbose_name='Full Name')),
                ('organization', models.CharField(default='', max_length=100, verbose_name='Organization')),
                ('description', models.TextField(blank=True, default='', verbose_name='Signup Description')),
                ('registered', models.BooleanField(default=False, verbose_name='Registration Status')),
                ('approved', models.BooleanField(default=False, verbose_name='Approval Status')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked Status')),
                ('user', models.OneToOneField(on_delete='cascade', to=settings.AUTH_USER_MODEL, verbose_name='Django User Object')),
            ],
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Go Link Creation Date')),
                ('date_expires', models.DateTimeField(blank=True, null=True, verbose_name='Go Link Expiry Date')),
                ('destination', models.URLField(default='https://go.gmu.edu', max_length=1000, verbose_name='Go Link Destination URL')),
                ('short', models.CharField(max_length=20, unique=True, validators=[go_back.validators.unique_short_validator, go_back.validators.regex_short_validator], verbose_name='Go Shortcode')),
                ('clicks', models.IntegerField(default=0)),
                ('qrclicks', models.IntegerField(default=0)),
                ('socialclicks', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete='cascade', to='go_back.RegisteredUser', verbose_name='RegisteredUser Owner')),
            ],
            options={
                'ordering': ['short'],
            },
        ),
    ]
